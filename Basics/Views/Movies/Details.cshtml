@model MvcMovie.Models.Movie

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

<div>
    <h4>Movie</h4>
    <hr />
    <dl class="row">
        <dt class = "col-sm-2">
            <!---Burada DisplayNameFor kısmı direkt verdiğim ismi yazmamı sağlıyor; örneğin
                Title dediğimde sütuna direkt Title yazıyor. Ancak DisplayFor direkt
                o nesnenin sahip olduğu ismi yazıyor.--->
           
            @Html.DisplayNameFor(model => model.Title)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Title)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.ReleaseDate)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.ReleaseDate)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Genre)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Genre)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Price)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Price)
        </dd>
    </dl>
</div>
<div>
    <!---asp-action: Hedef eylemi belirtir.
         asp-route-id: Dinamik bir parametre sağlar
         URL'ye eklenir ve eyleme bu parametre ile yönlendirme yapar.
         Kısacası bu, eylemin hangi film üzerinde işlem yapacağını anlamına gelir.--->
    <a asp-action="Edit" asp-route-id="@Model?.Id">Edit</a>
    <a asp-action="Index">Back to List</a>
</div>
